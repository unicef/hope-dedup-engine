name: Deploy Jekyll site to Pages

on:
  push:
    branches: [ "develop", "feature/*"]
    paths: ["docs/**"]
  pull_request:
    branches:  [ "develop" ]
    paths: ["docs/**"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      run_deploy: ${{ steps.changed-files.outputs.documentation }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
      - id: changed-files
        name: Check for documentation files changes
        uses: dorny/paths-filter@0bc4621a3135347011ad047f9ecf449bf72ce2bd # v3.0.0
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  build:
    name: Build Jekyll site
    needs: [ changes ]
    if: (needs.changes.outputs.run_deploy == 'true')
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: docs    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          working-directory: '${{ github.workspace }}/docs'
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
        with:
          path: "docs/_site/"

  deploy:
    name: Deploy to GitHub Pages
    needs: [ changes, build ]
    runs-on: ubuntu-latest
    if: (needs.changes.outputs.run_deploy == 'true')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

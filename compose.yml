x-common: &common
  build:
    context: .
    dockerfile: docker/Dockerfile
    target: dev
  env_file:
    - .env
  volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
  restart: unless-stopped
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  backend:
    <<: *common
    profiles: ["development"]
    command: ["entrypoint.sh", "dev"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    <<: *common
    profiles: ["development"]
    command: ["entrypoint.sh", "celery_worker"]

  celery_beat:
    <<: *common
    profiles: ["development"]
    command: ["entrypoint.sh", "celery_beat"]

  test:
    <<: *common
    profiles: ["test"]
    command: ["entrypoint.sh", "test"]

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      start_interval: 1s
      interval: 5s
      timeout: 4s
      retries: 5

  hopedb:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hopedb
    volumes:
      - hope_postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - 6379:6379
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 5s
      start_interval: 1s
      interval: 5s
      timeout: 4s
      retries: 5

volumes:
  postgres_data:
  hope_postgres_data:
